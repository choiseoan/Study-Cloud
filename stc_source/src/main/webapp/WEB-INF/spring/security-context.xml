<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<security:http  use-expressions="true">
		<security:session-management> 
			<security:concurrency-control max-sessions="1" expired-url="/"/>
		</security:session-management>
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:intercept-url pattern="/login/loginForm.do" access="permitAll"/>
		<security:intercept-url pattern="/echo/**" access="permitAll"/>
		<security:intercept-url pattern="/home" access="permitAll"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/host/**" access="hasRole('HOST')"/>
		<security:intercept-url pattern="/user/**" access="hasRole('USER')"/>
		<security:intercept-url pattern="/chatting" access="hasAnyRole('USER', 'ADMIN')"/>
		<!-- <security:intercept-url pattern="/reserve/**" access="hasAnyRole('USER','HOST')"/> -->
		
		<!-- <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/> -->
		
		<security:form-login 	login-page="/login"
								default-target-url=""
								authentication-failure-url="/login?error"
								username-parameter="id"
								password-parameter="password" />
		
		<!-- 로그아웃할 url 및 로그아웃성공시 이동할 url -->
		<security:logout 
								logout-url="/logout" 
								logout-success-url="/" 
								invalidate-session="true"
								delete-cookies="true"
		/>
		
		<security:access-denied-handler error-page="/"/>

	</security:http>
	

	<!-- 계정 --> 
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
							role-prefix=""
							users-by-username-query="select MEM_ID as username ,MEM_PASSWD ,MEM_QUIT as enabled from MEMBER where MEM_ID= ?"
							authorities-by-username-query="select MEM_ID as username, MEM_AUTHORITY as authority from MEMBER where MEM_ID= ?"
			/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	
	
	
	
	<!-- select MEM_ID as username, CASE WHEN MEM_AUTHORITY= 'ROLE_ADMIN'  THEN 'ROLE_ADMIN' ELSE 'ROLE_USER' END authority FROM MEMBER where MEM_ID=? -->
	
	
	<!-- <security:jdbc-user-service data-source-ref="dataSource"
			authorities-by-username-query="select MEM_ID as username ,MEM_PASSWD as password,MEM_QUIT as enabled from MEMBER where MEM_ID = ?"
			users-by-username-query="select MEM_ID as username, MEM_AUTHORITY as authority from MEMBER where MEM_ID= ?"			
			/> -->
	
	
</beans>


